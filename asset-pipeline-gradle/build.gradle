apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'

group = 'com.bertramlabs.plugins'
version = '2.0.13'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")


buildscript {
	repositories {
		mavenLocal()
		jcenter()
	}
	dependencies {
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
	}
}


repositories {
	jcenter()
	mavenLocal()
	mavenCentral()
}

// configurations.all {
// 	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
// 		if (details.requested.name == 'groovy-all') {
// 			details.useTarget group: details.requested.group, name: 'groovy', version:'2.3.0'
// 		}
// 	}
// }


dependencies {
	compile gradleApi()
	compile localGroovy()

	compile "com.bertramlabs.plugins:asset-pipeline-core:${version}"

	testCompile("org.spockframework:spock-core:0.7-groovy-2.0")
}

publishing {
	publications {
		maven(MavenPublication) {
			artifactId 'asset-pipeline-gradle'
			pom.withXml {
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name 'asset-pipeline-gradle'
					description 'JVM Asset Pipeline Gradle Adapter.'
					url 'https://github.com/bertramdev/asset-pipeline-core'
					scm {
						url 'https://github.com/bertramdev/asset-pipeline-core'
						connection 'scm:https://bertramdev@github.com/bertramdev/asset-pipeline-core.git'
						developerConnection 'scm:git://github.com/bertramdev/asset-pipeline-core.git'
					}
					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/license/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}
					developers {
						developer {
							id 'davydotcom'
							name 'David Estes'
							email 'davydotcom@gmail.com'
						}
					}
				}
			}
			from components.java
			artifact sourcesJar
			artifact javadocJar
		}
	}

	repositories {
		maven {
			credentials {
				username project.properties.get('artifactoryPublishUsername')
				password project.properties.get('artifactoryPublishPassword')
			}
			url "https://repo.grails.org/grails/libs-snapshots-local/"
		}
	}
}

bintray {
	if(project.hasProperty('bintrayUser')) {
	  user = bintrayUser
	  key = bintrayKey
	}

	publications = ['maven']
	pkg {
		repo = 'asset-pipeline'
		userOrg = 'bertramlabs'
		name = 'asset-pipeline-gradle'
		licenses = ['Apache-2.0']
	}
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task(console, dependsOn: 'classes', type: JavaExec) {
main = 'groovy.ui.Console'
classpath = sourceSets.main.runtimeClasspath
}

test {
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}


bintrayUpload.dependsOn build, sourcesJar, javadocJar
